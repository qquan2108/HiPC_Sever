{{#*inline "title"}}Quản Lý Banner{{/inline}}

<!-- Bootstrap CSS + Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
  .modal-backdrop.show {
    background-color: rgba(255,255,255,0.3) !important;
  }
  .card-img-top {
    height: 200px;
    object-fit: cover;
  }
  .loading {
    text-align: center;
    padding: 2rem;
  }
</style>

<div class="container py-5">
  <h1 class="text-center mb-4">Quản Lý Banner</h1>

  <div class="d-flex justify-content-end mb-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBannerModal">
      <i class="bi bi-plus-lg me-1"></i> Thêm Banner
    </button>
  </div>

  <div class="row g-4" id="bannerList">
    <div class="loading">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">Đang tải...</span>

      </div>
      <p class="mt-2">Đang tải banner...</p>
    </div>
  </div>
</div>

<!-- ==================== MODALS ==================== -->
<div class="modal fade" id="addBannerModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="addBannerModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="bannerForm" enctype="multipart/form-data">
        <div class="modal-header">
          <h5 class="modal-title" id="addBannerModalLabel">Thêm Banner</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="bannerTitle" class="form-label">Tiêu đề</label>
            <input type="text" id="bannerTitle" class="form-control" required>
          </div>
          <div class="mb-3">
            <label for="bannerFile" class="form-label">Chọn hình</label>
            <input type="file" id="bannerFile" class="form-control" accept="image/*" required>
          </div>
          <div class="mb-3">
            <label for="bannerContent" class="form-label">Nội dung</label>
            <textarea id="bannerContent" class="form-control" rows="3"></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">
            <span class="spinner-border spinner-border-sm d-none me-1" id="submitSpinner"></span>
            Lưu
          </button>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Xem trước Banner -->
<div class="modal fade" id="bannerPreviewModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xem trước Banner</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
      </div>
      <div class="modal-body text-center">
        <img src="" id="previewImage" class="img-fluid" alt="Preview" style="max-height: 500px;">
      </div>
    </div>
  </div>
</div>

<!-- ====== Bootstrap JS bundle ====== -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
  const API_BASE = 'http://localhost:3000';
  const UPLOAD_API = `${API_BASE}/banners/upload`;
  const BANNER_API = `${API_BASE}/banners`;

  function getFullImageUrl(imageUrl) {
    if (imageUrl.startsWith('http://') || imageUrl.startsWith('https://')) return imageUrl;
    return `${API_BASE}${imageUrl}`;
  }

  async function loadBanners() {
    try {
      console.log('🔄 Đang tải banner từ:', BANNER_API);
      const res = await fetch(BANNER_API);
      if (!res.ok) throw new Error(`HTTP ${res.status}: ${res.statusText}`);
      const list = await res.json();
      console.log('📊 Dữ liệu banner nhận được:', list);
      const container = document.getElementById('bannerList');
      if (list.length === 0) {
        container.innerHTML = `<div class="col-12 text-center"><div class="alert alert-info"><i class="bi bi-info-circle me-2"></i>Chưa có banner nào. Nhấn \"Thêm Banner\" để tạo banner đầu tiên.</div></div>`;
        return;
      }
      container.innerHTML = '';
      list.forEach(b => {
        const col = document.createElement('div');
        col.className = 'col-md-4';
        const fullImageUrl = getFullImageUrl(b.imageUrl);
        col.innerHTML = `<div class="card shadow-sm"><img src="${fullImageUrl}" class="card-img-top" alt="${b.title}"><div class="card-body text-center"><h5 class="card-title">${b.title}</h5><small class="text-muted d-block mb-2">${new Date(b.createdAt).toLocaleDateString('vi-VN')}</small><p class="text-sm mb-2">${b.content || ''}</p><div class="btn-group" role="group"><button class="btn btn-sm btn-outline-secondary" onclick="previewBanner('${fullImageUrl}', '${b.title}')" title="Xem trước"><i class="bi bi-eye"></i></button><button class="btn btn-sm btn-outline-danger" onclick="deleteBanner('${b._id}')" title="Xóa"><i class="bi bi-trash"></i></button></div></div></div>`;
        container.appendChild(col);
      });
    } catch (err) {
      console.error('Lỗi khi tải banner:', err);
      const container = document.getElementById('bannerList');
      container.innerHTML = `<div class="col-12"><div class="alert alert-danger"><i class="bi bi-exclamation-triangle me-2"></i>Lỗi khi tải banner: ${err.message}<br><small>Vui lòng kiểm tra kết nối mạng và server backend.</small></div></div>`;

    }
  }

  document.getElementById('bannerForm').addEventListener('submit', async e => {
    e.preventDefault();
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const spinner = document.getElementById('submitSpinner');
    const title = document.getElementById('bannerTitle').value.trim();
    const content = document.getElementById('bannerContent').value.trim();
    const file = document.getElementById('bannerFile').files[0];
    if (!file) { alert('Vui lòng chọn file hình ảnh.'); return; }
    if (file.size > 5 * 1024 * 1024) { alert('File quá lớn! Vui lòng chọn file nhỏ hơn 5MB.'); return; }
    try {
      submitBtn.disabled = true;
      spinner.classList.remove('d-none');
      const fd = new FormData();
      fd.append('image', file);
      const uploadRes = await fetch(UPLOAD_API, { method: 'POST', body: fd });
      if (!uploadRes.ok) throw new Error(`Upload failed ${uploadRes.status}`);
      const { imageUrl } = await uploadRes.json();
      const createRes = await fetch(BANNER_API, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, content, imageUrl })
      });
      if (!createRes.ok) throw new Error(`HTTP ${createRes.status}`);
      document.getElementById('addBannerModal').querySelector('form').reset();
      loadBanners();
      bootstrap.Modal.getInstance(document.getElementById('addBannerModal')).hide();
    } catch (err) {
      console.error('Lỗi tạo banner:', err);
      alert(`Lỗi tạo banner: ${err.message}`);
    } finally {
      submitBtn.disabled = false;
      spinner.classList.add('d-none');
    }
  });

  function previewBanner(url, title) {
    document.getElementById('previewImage').src = url;
    const modal = new bootstrap.Modal(document.getElementById('bannerPreviewModal'));
    modal.show();
  }

  async function deleteBanner(id) {
    if (!confirm('Xóa banner này?')) return;
    try {
      const res = await fetch(`${BANNER_API}/${id}`, { method: 'DELETE' });
      if (!res.ok) throw new Error(`HTTP ${res.status}`);
      loadBanners();
    } catch (err) {
      console.error('Lỗi xóa banner:', err);
      alert('Không thể xóa banner');
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    loadBanners();
  });
</script>
